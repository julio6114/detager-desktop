<?xml version="1.0" encoding="utf-8"?>
<s:Window xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  type="{NativeWindowType.LIGHTWEIGHT}" systemChrome="{NativeWindowSystemChrome.NONE}"
		  transparent="true" alwaysInFront="true"  showStatusBar="false"
		  resizable="false" minimizable="false"
		  width="32" height="32" maxWidth="32" maxHeight="32"
		  mouseDown="nativeWindow.startMove();"
		  creationComplete="window_creationCompleteHandler(event)"
		  nativeDragEnter="dragEnterHandler(event)"
		  nativeDragDrop="dragDropHandler(event)"
		  skinClass="com.detager.skins.DragInWindowSkin"
		  doubleClick="window_doubleClickHandler(event)" doubleClickEnabled="true">
	
	<fx:Script>
		<![CDATA[
			import com.detager.skins.NotificationCloseButtonSkin;
			
			import mx.events.FlexEvent;
			import mx.events.FlexNativeMenuEvent;
			
			import spark.components.WindowedApplication;
			
			public var dragEnterHandler:Function;
			
			public var dragDropHandler:Function;
			
			public var closeHandler:Function;
			
			protected function window_creationCompleteHandler(event:FlexEvent):void
			{
				nativeWindow.x = Capabilities.screenResolutionX - 150;
				nativeWindow.y = Capabilities.screenResolutionY - 150;
				menu.addEventListener(FlexNativeMenuEvent.ITEM_CLICK, closeHandler);
				menu.setContextMenu(this);
			}

			private function onItemClick(event:FlexNativeMenuEvent):void
			{
				closeHandler();
			}

			protected function window_doubleClickHandler(event:MouseEvent):void
			{
				var mainWindow:NativeWindow = NativeApplication.nativeApplication.openedWindows[0];
				mainWindow.restore();
				mainWindow.alwaysInFront = true;
				mainWindow.orderToFront();
				mainWindow.alwaysInFront = false;
			}

		]]>
	</fx:Script>
	
	<fx:Declarations>
		<mx:FlexNativeMenu id="menu" showRoot="false" dataProvider="{menuData}" labelField="@label" />
		<fx:XML id="menuData" format="e4x">
			<root>
				<menuitem label="Close"/>
			</root>
		</fx:XML>
	</fx:Declarations>
	
</s:Window>
